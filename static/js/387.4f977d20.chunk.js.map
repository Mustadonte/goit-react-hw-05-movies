{"version":3,"file":"static/js/387.4f977d20.chunk.js","mappings":"4WAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCACHC,EAAe,kCAEfC,EAAiB,mCAAG,6GAENH,GAAAA,CAAM,sBAAuB,CAClDI,OAAQ,CACNC,QAASJ,KAJgB,cAEvBK,EAFuB,yBAQtBA,EAASC,KAAKC,SARQ,gCAU7BC,QAAQC,IAAR,MAV6B,yDAAH,qDAcjBC,EAAY,mCAAG,WAAMC,GAAN,gGAELZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,oBAAwBX,IAFxB,cAElBY,EAFkB,yBAGjBA,EAAKN,MAHY,gCAKxBE,QAAQC,IAAR,MALwB,yDAAH,sDASZI,EAAY,mCAAG,WAAMF,GAAN,gGAELZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,4BAAgCX,IAFhC,cAElBY,EAFkB,yBAGjBA,EAAKN,KAAKQ,MAHO,gCAKxBN,QAAQC,IAAR,MALwB,yDAAH,sDASZM,EAAe,mCAAG,WAAMJ,GAAN,gGAERZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,4BAAgCX,IAF7B,cAErBY,EAFqB,yBAGpBA,EAAKN,MAHe,gCAK3BE,QAAQC,IAAR,MAL2B,yDAAH,sDASfO,EAAiB,mCAAG,WAAMC,GAAN,gGAEVlB,GAAAA,CAAM,gBAAiB,CACxCI,OAAQ,CACNC,QAASJ,EACTkB,MAAOD,KALkB,cAEvBL,EAFuB,yBAQtBA,EAAKN,KAAKC,SARY,gCAU7BC,QAAQC,IAAR,MAV6B,yDAAH,sDAcjBU,EAAqB,mCAAG,WAAMC,GAAN,gGAEVrB,GAAAA,CAAM,sBAAuB,CAClDI,OAAQ,CACNC,QAASJ,EACToB,KAAAA,KAL6B,cAE3Bf,EAF2B,yBAS1BA,EAASC,KAAKC,SATY,gCAWjCC,QAAQC,IAAR,MAXiC,yDAAH,uD,oIC5DrBY,EAAcC,EAAAA,EAAAA,GAAH,6DAKXC,EAAkBD,EAAAA,EAAAA,GAAH,4V,SC4C5B,EA7CgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,IAAgBe,OAAOH,IAAUI,MAAK,SAAAnB,GAAI,OAAIc,EAAWd,EAAKL,cAC7D,CAACoB,KAGF,8BACGF,EAAQO,OAAS,GAChB,SAACX,EAAD,UACGI,EAAQQ,KACP,YAGO,IAAD,IAFJC,eAAkBC,EAEd,EAFcA,YAAaC,EAE3B,EAF2BA,KAAMC,EAEjC,EAFiCA,OAAQC,EAEzC,EAFyCA,SAC7CC,EACI,EADJA,QAEA,OACE,UAAChB,EAAD,YACE,gBACEiB,IAAG,UAAKvC,EAAAA,IAAL,OAAoBkC,GACvBM,IAAKL,EACLM,MAAM,SAER,4BACE,wBAAKN,GAAc,oBACnB,0BACE,mCADF,IACkBC,SAGpB,0BAAOE,KACP,oBAboBD,SAoB9B","sources":["Helpers/ApiService.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '799d796b985f1f6ed2e5b2e723499181';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrandingMovies = async () => {\n  try {\n    const response = await axios('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const resp = await axios(`movie/${id}?api_key=${API_KEY}`);\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const resp = await axios(`movie/${id}/credits?api_key=${API_KEY}`);\n    return resp.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const resp = await axios(`movie/${id}/reviews?api_key=${API_KEY}`);\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByKeyword = async q => {\n  try {\n    const resp = await axios('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: q,\n      },\n    });\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTrandingMoviesMore = async page => {\n  try {\n    const response = await axios('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  width: 100%;\n  list-style: none;\n`;\n\nexport const ReviewsListItem = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  grid-template-rows: 1fr 2fr;\n  justify-content: center;\n  align-items: center;\n\n  border-bottom: 1px black solid;\n  span {\n    grid-column: 1/3;\n  }\n  div {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    margin: 0;\n  }\n`;\n","import { getMovieReviews } from 'Helpers/ApiService';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'Helpers/ApiService';\nimport { ReviewsList, ReviewsListItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(Number(movieId)).then(resp => setReviews(resp.results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ReviewsList>\n          {reviews.map(\n            ({\n              author_details: { avatar_path, name, rating, username },\n              content,\n            }) => {\n              return (\n                <ReviewsListItem key={username}>\n                  <img\n                    src={`${BASE_IMG_URL}${avatar_path}`}\n                    alt={name}\n                    width=\"150\"\n                  />\n                  <div>\n                    <h4>{name ? name : 'Unknown author'}</h4>\n                    <p>\n                      <b>Rating:</b> {rating}\n                    </p>\n                  </div>\n                  <span>{content}</span>\n                  <hr />\n                </ReviewsListItem>\n              );\n            }\n          )}\n        </ReviewsList>\n      ) : (\n        <p>There is no reviews</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","BASE_IMG_URL","getTrandingMovies","params","api_key","response","data","results","console","log","getMovieById","id","resp","getMovieCast","cast","getMovieReviews","getMovieByKeyword","q","query","getTrandingMoviesMore","page","ReviewsList","styled","ReviewsListItem","useState","reviews","setReviews","movieId","useParams","useEffect","Number","then","length","map","author_details","avatar_path","name","rating","username","content","src","alt","width"],"sourceRoot":""}