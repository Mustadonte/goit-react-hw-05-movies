{"version":3,"file":"static/js/736.c41f4e84.chunk.js","mappings":"4WAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCACHC,EAAe,kCAEfC,EAAiB,mCAAG,6GAENH,GAAAA,CAAM,sBAAuB,CAClDI,OAAQ,CACNC,QAASJ,KAJgB,cAEvBK,EAFuB,yBAQtBA,EAASC,KAAKC,SARQ,gCAU7BC,QAAQC,IAAR,MAV6B,yDAAH,qDAcjBC,EAAY,mCAAG,WAAMC,GAAN,gGAELZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,oBAAwBX,IAFxB,cAElBY,EAFkB,yBAGjBA,EAAKN,MAHY,gCAKxBE,QAAQC,IAAR,MALwB,yDAAH,sDASZI,EAAY,mCAAG,WAAMF,GAAN,gGAELZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,4BAAgCX,IAFhC,cAElBY,EAFkB,yBAGjBA,EAAKN,KAAKQ,MAHO,gCAKxBN,QAAQC,IAAR,MALwB,yDAAH,sDASZM,EAAe,mCAAG,WAAMJ,GAAN,gGAERZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,4BAAgCX,IAF7B,cAErBY,EAFqB,yBAGpBA,EAAKN,MAHe,gCAK3BE,QAAQC,IAAR,MAL2B,yDAAH,sDASfO,EAAiB,mCAAG,WAAMC,GAAN,gGAEVlB,GAAAA,CAAM,gBAAiB,CACxCI,OAAQ,CACNC,QAASJ,EACTkB,MAAOD,KALkB,cAEvBL,EAFuB,yBAQtBA,EAAKN,KAAKC,SARY,gCAU7BC,QAAQC,IAAR,MAV6B,yDAAH,sDAcjBU,EAAqB,mCAAG,WAAMC,GAAN,gGAEVrB,GAAAA,CAAM,sBAAuB,CAClDI,OAAQ,CACNC,QAASJ,EACToB,KAAAA,KAL6B,cAE3Bf,EAF2B,yBAS1BA,EAASC,KAAKC,SATY,gCAWjCC,QAAQC,IAAR,MAXiC,yDAAH,uD,oIC5DrBY,EAAWC,EAAAA,EAAAA,GAAH,yHAQRC,EAAWD,EAAAA,EAAAA,GAAH,mH,SCwBrB,EA7Ba,WACX,IAAMX,GAAKa,EAAAA,EAAAA,MAAYC,QACvB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACRf,EAAAA,EAAAA,IAAaF,GAAIkB,KAAKF,KACrB,CAAChB,KAEF,8BACGG,EAAKgB,OAAS,IACb,SAACT,EAAD,UACGP,EAAKiB,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,KAAMrB,EAAuB,EAAvBA,GAAIsB,EAAmB,EAAnBA,aACrB,OACE,UAACV,EAAD,YACE,gBACEW,IAAG,yCAAoCD,GACvCE,IAAKH,EACLI,OAAO,SAET,uBAAIJ,MANSrB","sources":["Helpers/ApiService.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '799d796b985f1f6ed2e5b2e723499181';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrandingMovies = async () => {\n  try {\n    const response = await axios('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const resp = await axios(`movie/${id}?api_key=${API_KEY}`);\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const resp = await axios(`movie/${id}/credits?api_key=${API_KEY}`);\n    return resp.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const resp = await axios(`movie/${id}/reviews?api_key=${API_KEY}`);\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByKeyword = async q => {\n  try {\n    const resp = await axios('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: q,\n      },\n    });\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTrandingMoviesMore = async page => {\n  try {\n    const response = await axios('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 10px;\n\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  font-size: 16px;\n  font-style: italic;\n  padding: 20px;\n\n  p {\n    margin: 0;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { getMovieCast } from 'Helpers/ApiService';\nimport { useParams } from 'react-router-dom';\nimport { CastItem, CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const id = useParams().movieId;\n  const [cast, setCast] = useState('');\n\n  useEffect(() => {\n    getMovieCast(id).then(setCast);\n  }, [id]);\n  return (\n    <>\n      {cast.length > 0 && (\n        <CastList>\n          {cast.map(({ name, id, profile_path }) => {\n            return (\n              <CastItem key={id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                  height=\"150\"\n                />\n                <p>{name}</p>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","BASE_IMG_URL","getTrandingMovies","params","api_key","response","data","results","console","log","getMovieById","id","resp","getMovieCast","cast","getMovieReviews","getMovieByKeyword","q","query","getTrandingMoviesMore","page","CastList","styled","CastItem","useParams","movieId","useState","setCast","useEffect","then","length","map","name","profile_path","src","alt","height"],"sourceRoot":""}