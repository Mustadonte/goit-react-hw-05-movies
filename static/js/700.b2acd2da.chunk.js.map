{"version":3,"file":"static/js/700.b2acd2da.chunk.js","mappings":"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","sources":["Helpers/ApiService.js","Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '799d796b985f1f6ed2e5b2e723499181';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrandingMovies = async () => {\n  try {\n    const response = await axios('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const resp = await axios(`movie/${id}?api_key=${API_KEY}`);\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const resp = await axios(`movie/${id}/credits?api_key=${API_KEY}`);\n    return resp.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const resp = await axios(`movie/${id}/reviews?api_key=${API_KEY}`);\n    return resp.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByKeyword = async q => {\n  try {\n    const resp = await axios('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: q,\n      },\n    });\n    return resp.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTrandingMoviesMore = async page => {\n  try {\n    const response = await axios('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  text-align: right;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n\n  &.active {\n    padding: 4px;\n    color: white;\n    background-color: #4caf50;\n    outline: none;\n    border: none;\n    border-radius: 4px;\n  }\n`;\n\nexport const ButtonLink = styled.button`\n  background: #93baed;\n  outline: none;\n  border: none;\n  border-radius: 4px;\n  transition-duration: 0.4s;\n  :hover {\n    background-color: #4caf50;\n    color: white;\n    cursor: pointer;\n  }\n`;\nexport const MovieInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 100%;\n  padding: 10px 50px;\n`;\nexport const MovieInfo = styled.div`\n  display: flex;\n  justify-content: center;\n\n  img {\n    display: block;\n    height: 400px;\n    border-radius: 4px;\n  }\n`;\n\nexport const MovieInfoText = styled.div`\n  margin-left: 30px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  p {\n    display: inline-block;\n  }\n`;\n\nexport const AdditionalInformation = styled.div`\n  text-align: center;\n\n  ul {\n    display: flex;\n    justify-content: space-around;\n    list-style: none;\n  }\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'Helpers/ApiService';\nimport { useState, useEffect } from 'react';\nimport { BASE_IMG_URL } from 'Helpers/ApiService';\nimport {\n  MovieInfo,\n  MovieInfoText,\n  AdditionalInformation,\n  MovieInfoContainer,\n  StyledLink,\n  ButtonLink,\n  StyledNavLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    getMovieById(Number(movieId)).then(setMovie);\n  }, [movieId]);\n\n  const location = useLocation();\n\n  const {\n    title,\n    overview,\n    poster_path,\n    genres = [],\n    release_date,\n    vote_average,\n  } = movie;\n\n  const date = new Date();\n  return (\n    <>\n      <MovieInfoContainer>\n        <StyledLink to={location.state?.from ?? '/movies'}>\n          <ButtonLink type=\"buttom\"> Go Back </ButtonLink>\n        </StyledLink>\n\n        <MovieInfo>\n          <img src={`${BASE_IMG_URL}${poster_path}`} alt={title} />\n          <MovieInfoText>\n            <h2>\n              {title} ({date.getUTCFullYear(release_date)})\n            </h2>\n            <b>User score:</b> {vote_average}\n            <p>\n              <h4>Overview:</h4> {overview}\n            </p>\n            <p>\n              <h4>Genres:</h4> {genres.map(genre => genre.name).join(' | ')}\n            </p>\n          </MovieInfoText>\n        </MovieInfo>\n\n        <AdditionalInformation>\n          <h3>Additional information:</h3>\n          <ul>\n            <li>\n              <StyledNavLink to=\"cast\" state={{ from: location.state.from }}>\n                <ButtonLink>Cast</ButtonLink>\n              </StyledNavLink>\n            </li>\n            <li>\n              <StyledNavLink to=\"reviews\" state={{ from: location.state.from }}>\n                <ButtonLink>Reviews</ButtonLink>\n              </StyledNavLink>\n            </li>\n          </ul>\n        </AdditionalInformation>\n\n        <Outlet />\n      </MovieInfoContainer>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","BASE_IMG_URL","getTrandingMovies","params","api_key","response","data","results","console","log","getMovieById","id","resp","getMovieCast","cast","getMovieReviews","getMovieByKeyword","q","query","getTrandingMoviesMore","page","StyledLink","styled","Link","StyledNavLink","NavLink","ButtonLink","MovieInfoContainer","MovieInfo","MovieInfoText","AdditionalInformation","movieId","useParams","useState","movie","setMovie","useEffect","Number","then","location","useLocation","title","overview","poster_path","genres","release_date","vote_average","date","Date","to","state","from","type","src","alt","getUTCFullYear","map","genre","name","join"],"sourceRoot":""}